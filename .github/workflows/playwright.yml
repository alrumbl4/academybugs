name: Playwright Tests with Allure

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
        
      - name: Install dependencies
        run: |
          npm ci
          npm install @playwright/test
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run tests with results output
        run: |
          mkdir -p test-results
          npx playwright test --reporter=json,line --output=test-results/results.json || echo "Tests completed with exit code $?"
          ls -la test-results/

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
          retention-days: 20
          if-no-files-found: ignore

      - name: Setup Allure environment
        if: always()
        run: |
          npm install -g allure-commandline
          mkdir -p allure-results

      - name: Checkout gh-pages branch
        if: always()
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          fetch-depth: 0

      - name: Generate Allure report
        if: always()
        run: |
          allure generate allure-results --clean -o allure-report
          ls -la allure-report/

      - name: Install Allure Notifications
        if: always()
        run: |
          npm install -g https://github.com/qa-guru/allure-notifications.git
          echo "Allure Notifications version: $(allure-notifications --version)"

      - name: Send Telegram Notification
        if: always()
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.repository }}/allure-report"
          npx allure-notifications \
            --config.telegram.enabled=true \
            --config.telegram.token="${{ secrets.TELEGRAM_BOT_TOKEN }}" \
            --config.telegram.chatId="${{ secrets.TELEGRAM_CHAT_ID }}" \
            --report.url="$REPORT_URL" \
            --env.type=github \
            --env.repo="${{ github.repository }}" \
            --env.buildUrl="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Deploy Allure report
        if: success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          force_orphan: true
          keep_files: false
