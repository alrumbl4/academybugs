name: Playwright Tests with Allure & Telegram

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  e2eTests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
      # Шаг 1: Подготовка окружения
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      # Шаг 2: Установка зависимостей
      - name: Install dependencies
        run: |
          npm ci
          npm install @playwright/test
          npm install https://github.com/qa-guru/allure-notifications.git

      # Шаг 3: Установка браузеров
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # Шаг 4: Запуск тестов
      - name: Run tests with reporting
        run: |
          mkdir -p test-results allure-results
          npx playwright test --reporter=line,allure-playwright || echo "Tests completed with exit code $?"

      # Шаг 5: Сохранение результатов
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-artifacts
          path: |
            test-results/
            allure-results/
          retention-days: 3
          if-no-files-found: warn

      # Шаг 6: Подготовка Allure отчета
      - name: Prepare Allure environment
        if: always()
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report

      # Шаг 7: Работа с историей отчетов
      - name: Setup report history
        if: always()
        run: |
          mkdir -p allure-report/history
          git fetch origin gh-pages || echo "No existing gh-pages branch"
          git worktree add --track -B gh-pages gh-pages origin/gh-pages || git checkout --orphan gh-pages
          [ -d "gh-pages/allure-history" ] && cp -r gh-pages/allure-history/. allure-report/history/

      # Шаг 8: Отправка уведомления в Telegram
      - name: Send Telegram notification
        if: always()
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.repository }}/allure-report"
          npx allure-notifications \
            --config.telegram.enabled=true \
            --config.telegram.token="${{ secrets.TELEGRAM_BOT_TOKEN }}" \
            --config.telegram.chatId="${{ secrets.TELEGRAM_CHAT_ID }}" \
            --report.url="$REPORT_URL" \
            --env.type=github \
            --env.repo="${{ github.repository }}" \
            --env.buildUrl="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      # Шаг 9: Деплой отчета
      - name: Deploy Allure report
        if: success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          force_orphan: true
          keep_files: false
